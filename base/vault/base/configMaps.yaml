apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-init-script
  namespace: vault
data:
  init.sh: |
    #!/bin/sh
    set -e

    echo "Checking Vault status..."

    # Function to unseal vault
    unseal_vault() {
      echo "Unsealing Vault..."
      UNSEAL_KEYS=$(kubectl get secret -n $KUBERNETES_NAMESPACE vault-unseal-keys -o jsonpath='{.data.keys}' | base64 -d)
      echo "$UNSEAL_KEYS" | tr ' ' '\n' | head -n 3 | while read key; do
        echo "Applying unseal key..."
        vault operator unseal $key
      done
    }

    # Check if Vault is sealed
    if vault status | grep -q 'Sealed.*true'; then
      echo "Vault is sealed. Unsealing..."
      unseal_vault
    fi

    # Enable and configure Kubernetes auth
    echo "Configuring Kubernetes auth..."
    vault auth enable kubernetes || true

    echo "Writing Kubernetes auth config..."
    vault write auth/kubernetes/config \
      kubernetes_host="https://kubernetes.default.svc" \
      token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
      kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
      issuer="https://kubernetes.default.svc.cluster.local"

    echo "Creating policies..."
    vault policy write oauth-policy - <<EOF
    path "kv/data/oauth2-proxy/*" {
      capabilities = ["read", "list"]
    }
    path "kv/metadata/oauth2-proxy/*" {
      capabilities = ["list"]
    }
    EOF

    echo "Creating roles..."
    vault write auth/kubernetes/role/oauth2-proxy \
      bound_service_account_names=oauth2-proxy \
      bound_service_account_namespaces=oauth \
      policies=oauth-policy \
      ttl=1h

    echo "Enabling KV secrets engine..."
    vault secrets enable -path=kv -version=2 kv || true

    # Keep container running for monitoring
    echo "Configuration complete. Monitoring Vault status..."
    while true; do
      if vault status | grep -q 'Sealed.*true'; then
        echo "Vault is sealed. Unsealing..."
        unseal_vault
      fi
      sleep 30
    done
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config-script
  namespace: vault
data:
  configure.sh: |
    #!/bin/sh
    set -e

    vault auth enable kubernetes || true

    vault write auth/kubernetes/config \
      kubernetes_host="https://kubernetes.default.svc" \
      token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
      kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
      issuer="https://kubernetes.default.svc.cluster.local"

    vault policy write oauth-policy - <<EOF
    path "kv/data/oauth2-proxy/*" {
      capabilities = ["read", "list"]
    }
    path "kv/metadata/oauth2-proxy/*" {
      capabilities = ["list"]
    }
    EOF

    vault write auth/kubernetes/role/oauth2-proxy \
      bound_service_account_names=oauth2-proxy \
      bound_service_account_namespaces=oauth \
      policies=oauth-policy \
      ttl=1h

    vault secrets enable -path=kv -version=2 kv || true

    # Keep container running
    tail -f /dev/null
